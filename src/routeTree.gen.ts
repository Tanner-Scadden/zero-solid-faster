/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as CategoryIndexImport } from './routes/$category/index'
import { Route as CategorySubcategoryIndexImport } from './routes/$category/$subcategory/index'
import { Route as CategorySubcategoryProductIndexImport } from './routes/$category/$subcategory/$product/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CategoryIndexRoute = CategoryIndexImport.update({
  id: '/$category/',
  path: '/$category/',
  getParentRoute: () => rootRoute,
} as any)

const CategorySubcategoryIndexRoute = CategorySubcategoryIndexImport.update({
  id: '/$category/$subcategory/',
  path: '/$category/$subcategory/',
  getParentRoute: () => rootRoute,
} as any)

const CategorySubcategoryProductIndexRoute =
  CategorySubcategoryProductIndexImport.update({
    id: '/$category/$subcategory/$product/',
    path: '/$category/$subcategory/$product/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/$category/': {
      id: '/$category/'
      path: '/$category'
      fullPath: '/$category'
      preLoaderRoute: typeof CategoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/$category/$subcategory/': {
      id: '/$category/$subcategory/'
      path: '/$category/$subcategory'
      fullPath: '/$category/$subcategory'
      preLoaderRoute: typeof CategorySubcategoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/$category/$subcategory/$product/': {
      id: '/$category/$subcategory/$product/'
      path: '/$category/$subcategory/$product'
      fullPath: '/$category/$subcategory/$product'
      preLoaderRoute: typeof CategorySubcategoryProductIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/$category': typeof CategoryIndexRoute
  '/$category/$subcategory': typeof CategorySubcategoryIndexRoute
  '/$category/$subcategory/$product': typeof CategorySubcategoryProductIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/$category': typeof CategoryIndexRoute
  '/$category/$subcategory': typeof CategorySubcategoryIndexRoute
  '/$category/$subcategory/$product': typeof CategorySubcategoryProductIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/$category/': typeof CategoryIndexRoute
  '/$category/$subcategory/': typeof CategorySubcategoryIndexRoute
  '/$category/$subcategory/$product/': typeof CategorySubcategoryProductIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/$category'
    | '/$category/$subcategory'
    | '/$category/$subcategory/$product'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/$category'
    | '/$category/$subcategory'
    | '/$category/$subcategory/$product'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/$category/'
    | '/$category/$subcategory/'
    | '/$category/$subcategory/$product/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CategoryIndexRoute: typeof CategoryIndexRoute
  CategorySubcategoryIndexRoute: typeof CategorySubcategoryIndexRoute
  CategorySubcategoryProductIndexRoute: typeof CategorySubcategoryProductIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CategoryIndexRoute: CategoryIndexRoute,
  CategorySubcategoryIndexRoute: CategorySubcategoryIndexRoute,
  CategorySubcategoryProductIndexRoute: CategorySubcategoryProductIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/$category/",
        "/$category/$subcategory/",
        "/$category/$subcategory/$product/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/$category/": {
      "filePath": "$category/index.tsx"
    },
    "/$category/$subcategory/": {
      "filePath": "$category/$subcategory/index.tsx"
    },
    "/$category/$subcategory/$product/": {
      "filePath": "$category/$subcategory/$product/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
